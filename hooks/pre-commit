#!/bin/bash

# Pre-commit hook for API validation
# This hook runs before each commit to validate code against API rules

set -e

# Get the directory where this script is located
HOOK_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PROJECT_ROOT="$(dirname "$HOOK_DIR")"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running API validation checks...${NC}"

# Check if Python is available
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}Error: Python3 is not installed or not in PATH${NC}"
    exit 1
fi

# Check if validation module exists
if [ ! -f "$PROJECT_ROOT/validation/api_validator.py" ]; then
    echo -e "${RED}Error: API validation module not found${NC}"
    exit 1
fi

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${YELLOW}No files staged for commit${NC}"
    exit 0
fi

# Run Python validation
cd "$PROJECT_ROOT"
python3 -m validation.api_validator --staged-files

VALIDATION_EXIT_CODE=$?

if [ $VALIDATION_EXIT_CODE -eq 0 ]; then
    echo -e "${GREEN}✓ API validation passed${NC}"
    exit 0
else
    echo -e "${RED}✗ API validation failed${NC}"
    echo -e "${YELLOW}Commit aborted. Please fix the issues above.${NC}"
    exit 1
fi 